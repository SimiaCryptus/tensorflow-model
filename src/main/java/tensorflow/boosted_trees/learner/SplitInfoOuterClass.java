/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: split_info.proto

package tensorflow.boosted_trees.learner;

public final class SplitInfoOuterClass {
  private SplitInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SplitInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.learner.SplitInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The split node without the child nodes attached.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    boolean hasSplitNode();
    /**
     * <pre>
     * The split node without the child nodes attached.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNode getSplitNode();
    /**
     * <pre>
     * The split node without the child nodes attached.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getSplitNodeOrBuilder();

    /**
     * <pre>
     * Left Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
     */
    boolean hasLeftChild();
    /**
     * <pre>
     * Left Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.Leaf getLeftChild();
    /**
     * <pre>
     * Left Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getLeftChildOrBuilder();

    /**
     * <pre>
     * Right Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
     */
    boolean hasRightChild();
    /**
     * <pre>
     * Right Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.Leaf getRightChild();
    /**
     * <pre>
     * Right Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getRightChildOrBuilder();
  }
  /**
   * <pre>
   * Gathered information for a split node.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.learner.SplitInfo}
   */
  public  static final class SplitInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.learner.SplitInfo)
      SplitInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SplitInfo.newBuilder() to construct.
    private SplitInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SplitInfo() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SplitInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder subBuilder = null;
              if (splitNode_ != null) {
                subBuilder = splitNode_.toBuilder();
              }
              splitNode_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.TreeNode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(splitNode_);
                splitNode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder subBuilder = null;
              if (leftChild_ != null) {
                subBuilder = leftChild_.toBuilder();
              }
              leftChild_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.Leaf.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leftChild_);
                leftChild_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder subBuilder = null;
              if (rightChild_ != null) {
                subBuilder = rightChild_.toBuilder();
              }
              rightChild_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.Leaf.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rightChild_);
                rightChild_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_SplitInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_SplitInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.class, tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.Builder.class);
    }

    public static final int SPLIT_NODE_FIELD_NUMBER = 1;
    private tensorflow.boosted_trees.trees.TreeConfig.TreeNode splitNode_;
    /**
     * <pre>
     * The split node without the child nodes attached.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    public boolean hasSplitNode() {
      return splitNode_ != null;
    }
    /**
     * <pre>
     * The split node without the child nodes attached.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getSplitNode() {
      return splitNode_ == null ? tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance() : splitNode_;
    }
    /**
     * <pre>
     * The split node without the child nodes attached.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getSplitNodeOrBuilder() {
      return getSplitNode();
    }

    public static final int LEFT_CHILD_FIELD_NUMBER = 2;
    private tensorflow.boosted_trees.trees.TreeConfig.Leaf leftChild_;
    /**
     * <pre>
     * Left Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
     */
    public boolean hasLeftChild() {
      return leftChild_ != null;
    }
    /**
     * <pre>
     * Left Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.Leaf getLeftChild() {
      return leftChild_ == null ? tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : leftChild_;
    }
    /**
     * <pre>
     * Left Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getLeftChildOrBuilder() {
      return getLeftChild();
    }

    public static final int RIGHT_CHILD_FIELD_NUMBER = 3;
    private tensorflow.boosted_trees.trees.TreeConfig.Leaf rightChild_;
    /**
     * <pre>
     * Right Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
     */
    public boolean hasRightChild() {
      return rightChild_ != null;
    }
    /**
     * <pre>
     * Right Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.Leaf getRightChild() {
      return rightChild_ == null ? tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : rightChild_;
    }
    /**
     * <pre>
     * Right Leaf node.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getRightChildOrBuilder() {
      return getRightChild();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (splitNode_ != null) {
        output.writeMessage(1, getSplitNode());
      }
      if (leftChild_ != null) {
        output.writeMessage(2, getLeftChild());
      }
      if (rightChild_ != null) {
        output.writeMessage(3, getRightChild());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (splitNode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSplitNode());
      }
      if (leftChild_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLeftChild());
      }
      if (rightChild_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRightChild());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo other = (tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo) obj;

      boolean result = true;
      result = result && (hasSplitNode() == other.hasSplitNode());
      if (hasSplitNode()) {
        result = result && getSplitNode()
            .equals(other.getSplitNode());
      }
      result = result && (hasLeftChild() == other.hasLeftChild());
      if (hasLeftChild()) {
        result = result && getLeftChild()
            .equals(other.getLeftChild());
      }
      result = result && (hasRightChild() == other.hasRightChild());
      if (hasRightChild()) {
        result = result && getRightChild()
            .equals(other.getRightChild());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSplitNode()) {
        hash = (37 * hash) + SPLIT_NODE_FIELD_NUMBER;
        hash = (53 * hash) + getSplitNode().hashCode();
      }
      if (hasLeftChild()) {
        hash = (37 * hash) + LEFT_CHILD_FIELD_NUMBER;
        hash = (53 * hash) + getLeftChild().hashCode();
      }
      if (hasRightChild()) {
        hash = (37 * hash) + RIGHT_CHILD_FIELD_NUMBER;
        hash = (53 * hash) + getRightChild().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Gathered information for a split node.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.learner.SplitInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.learner.SplitInfo)
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_SplitInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_SplitInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.class, tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (splitNodeBuilder_ == null) {
          splitNode_ = null;
        } else {
          splitNode_ = null;
          splitNodeBuilder_ = null;
        }
        if (leftChildBuilder_ == null) {
          leftChild_ = null;
        } else {
          leftChild_ = null;
          leftChildBuilder_ = null;
        }
        if (rightChildBuilder_ == null) {
          rightChild_ = null;
        } else {
          rightChild_ = null;
          rightChildBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_SplitInfo_descriptor;
      }

      @java.lang.Override
      public tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo getDefaultInstanceForType() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo build() {
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo buildPartial() {
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo result = new tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo(this);
        if (splitNodeBuilder_ == null) {
          result.splitNode_ = splitNode_;
        } else {
          result.splitNode_ = splitNodeBuilder_.build();
        }
        if (leftChildBuilder_ == null) {
          result.leftChild_ = leftChild_;
        } else {
          result.leftChild_ = leftChildBuilder_.build();
        }
        if (rightChildBuilder_ == null) {
          result.rightChild_ = rightChild_;
        } else {
          result.rightChild_ = rightChildBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo) {
          return mergeFrom((tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo other) {
        if (other == tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo.getDefaultInstance()) return this;
        if (other.hasSplitNode()) {
          mergeSplitNode(other.getSplitNode());
        }
        if (other.hasLeftChild()) {
          mergeLeftChild(other.getLeftChild());
        }
        if (other.hasRightChild()) {
          mergeRightChild(other.getRightChild());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.TreeNode splitNode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> splitNodeBuilder_;
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public boolean hasSplitNode() {
        return splitNodeBuilder_ != null || splitNode_ != null;
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getSplitNode() {
        if (splitNodeBuilder_ == null) {
          return splitNode_ == null ? tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance() : splitNode_;
        } else {
          return splitNodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder setSplitNode(tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (splitNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          splitNode_ = value;
          onChanged();
        } else {
          splitNodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder setSplitNode(
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder builderForValue) {
        if (splitNodeBuilder_ == null) {
          splitNode_ = builderForValue.build();
          onChanged();
        } else {
          splitNodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder mergeSplitNode(tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (splitNodeBuilder_ == null) {
          if (splitNode_ != null) {
            splitNode_ =
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.newBuilder(splitNode_).mergeFrom(value).buildPartial();
          } else {
            splitNode_ = value;
          }
          onChanged();
        } else {
          splitNodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder clearSplitNode() {
        if (splitNodeBuilder_ == null) {
          splitNode_ = null;
          onChanged();
        } else {
          splitNode_ = null;
          splitNodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder getSplitNodeBuilder() {
        
        onChanged();
        return getSplitNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getSplitNodeOrBuilder() {
        if (splitNodeBuilder_ != null) {
          return splitNodeBuilder_.getMessageOrBuilder();
        } else {
          return splitNode_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance() : splitNode_;
        }
      }
      /**
       * <pre>
       * The split node without the child nodes attached.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> 
          getSplitNodeFieldBuilder() {
        if (splitNodeBuilder_ == null) {
          splitNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder>(
                  getSplitNode(),
                  getParentForChildren(),
                  isClean());
          splitNode_ = null;
        }
        return splitNodeBuilder_;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.Leaf leftChild_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> leftChildBuilder_;
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public boolean hasLeftChild() {
        return leftChildBuilder_ != null || leftChild_ != null;
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf getLeftChild() {
        if (leftChildBuilder_ == null) {
          return leftChild_ == null ? tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : leftChild_;
        } else {
          return leftChildBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public Builder setLeftChild(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (leftChildBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leftChild_ = value;
          onChanged();
        } else {
          leftChildBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public Builder setLeftChild(
          tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (leftChildBuilder_ == null) {
          leftChild_ = builderForValue.build();
          onChanged();
        } else {
          leftChildBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public Builder mergeLeftChild(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (leftChildBuilder_ == null) {
          if (leftChild_ != null) {
            leftChild_ =
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.newBuilder(leftChild_).mergeFrom(value).buildPartial();
          } else {
            leftChild_ = value;
          }
          onChanged();
        } else {
          leftChildBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public Builder clearLeftChild() {
        if (leftChildBuilder_ == null) {
          leftChild_ = null;
          onChanged();
        } else {
          leftChild_ = null;
          leftChildBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder getLeftChildBuilder() {
        
        onChanged();
        return getLeftChildFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getLeftChildOrBuilder() {
        if (leftChildBuilder_ != null) {
          return leftChildBuilder_.getMessageOrBuilder();
        } else {
          return leftChild_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : leftChild_;
        }
      }
      /**
       * <pre>
       * Left Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf left_child = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
          getLeftChildFieldBuilder() {
        if (leftChildBuilder_ == null) {
          leftChildBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder>(
                  getLeftChild(),
                  getParentForChildren(),
                  isClean());
          leftChild_ = null;
        }
        return leftChildBuilder_;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.Leaf rightChild_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> rightChildBuilder_;
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public boolean hasRightChild() {
        return rightChildBuilder_ != null || rightChild_ != null;
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf getRightChild() {
        if (rightChildBuilder_ == null) {
          return rightChild_ == null ? tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : rightChild_;
        } else {
          return rightChildBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public Builder setRightChild(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (rightChildBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rightChild_ = value;
          onChanged();
        } else {
          rightChildBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public Builder setRightChild(
          tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (rightChildBuilder_ == null) {
          rightChild_ = builderForValue.build();
          onChanged();
        } else {
          rightChildBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public Builder mergeRightChild(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (rightChildBuilder_ == null) {
          if (rightChild_ != null) {
            rightChild_ =
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.newBuilder(rightChild_).mergeFrom(value).buildPartial();
          } else {
            rightChild_ = value;
          }
          onChanged();
        } else {
          rightChildBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public Builder clearRightChild() {
        if (rightChildBuilder_ == null) {
          rightChild_ = null;
          onChanged();
        } else {
          rightChild_ = null;
          rightChildBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder getRightChildBuilder() {
        
        onChanged();
        return getRightChildFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getRightChildOrBuilder() {
        if (rightChildBuilder_ != null) {
          return rightChildBuilder_.getMessageOrBuilder();
        } else {
          return rightChild_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : rightChild_;
        }
      }
      /**
       * <pre>
       * Right Leaf node.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf right_child = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
          getRightChildFieldBuilder() {
        if (rightChildBuilder_ == null) {
          rightChildBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder>(
                  getRightChild(),
                  getParentForChildren(),
                  isClean());
          rightChild_ = null;
        }
        return rightChildBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.learner.SplitInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.learner.SplitInfo)
    private static final tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo();
    }

    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SplitInfo>
        PARSER = new com.google.protobuf.AbstractParser<SplitInfo>() {
      @java.lang.Override
      public SplitInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SplitInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SplitInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SplitInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.boosted_trees.learner.SplitInfoOuterClass.SplitInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ObliviousSplitInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.learner.ObliviousSplitInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    boolean hasSplitNode();
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNode getSplitNode();
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getSplitNodeOrBuilder();

    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    java.util.List<tensorflow.boosted_trees.trees.TreeConfig.Leaf> 
        getChildrenList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.Leaf getChildren(int index);
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    int getChildrenCount();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getChildrenOrBuilder(
        int index);

    /**
     * <pre>
     * For each child, children_parent_id stores the node_id of its parent when it
     * was a leaf. For the idx-th child it corresponds the idx/2-th
     * children_parent_id.
     * </pre>
     *
     * <code>repeated int32 children_parent_id = 3;</code>
     */
    java.util.List<java.lang.Integer> getChildrenParentIdList();
    /**
     * <pre>
     * For each child, children_parent_id stores the node_id of its parent when it
     * was a leaf. For the idx-th child it corresponds the idx/2-th
     * children_parent_id.
     * </pre>
     *
     * <code>repeated int32 children_parent_id = 3;</code>
     */
    int getChildrenParentIdCount();
    /**
     * <pre>
     * For each child, children_parent_id stores the node_id of its parent when it
     * was a leaf. For the idx-th child it corresponds the idx/2-th
     * children_parent_id.
     * </pre>
     *
     * <code>repeated int32 children_parent_id = 3;</code>
     */
    int getChildrenParentId(int index);
  }
  /**
   * Protobuf type {@code tensorflow.boosted_trees.learner.ObliviousSplitInfo}
   */
  public  static final class ObliviousSplitInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.learner.ObliviousSplitInfo)
      ObliviousSplitInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ObliviousSplitInfo.newBuilder() to construct.
    private ObliviousSplitInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ObliviousSplitInfo() {
      children_ = java.util.Collections.emptyList();
      childrenParentId_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ObliviousSplitInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder subBuilder = null;
              if (splitNode_ != null) {
                subBuilder = splitNode_.toBuilder();
              }
              splitNode_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.TreeNode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(splitNode_);
                splitNode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                children_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.Leaf>();
                mutable_bitField0_ |= 0x00000002;
              }
              children_.add(
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.Leaf.parser(), extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                childrenParentId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              childrenParentId_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                childrenParentId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                childrenParentId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          childrenParentId_ = java.util.Collections.unmodifiableList(childrenParentId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.class, tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SPLIT_NODE_FIELD_NUMBER = 1;
    private tensorflow.boosted_trees.trees.TreeConfig.TreeNode splitNode_;
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    public boolean hasSplitNode() {
      return splitNode_ != null;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getSplitNode() {
      return splitNode_ == null ? tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance() : splitNode_;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getSplitNodeOrBuilder() {
      return getSplitNode();
    }

    public static final int CHILDREN_FIELD_NUMBER = 2;
    private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.Leaf> children_;
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.Leaf> getChildrenList() {
      return children_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.Leaf getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    public static final int CHILDREN_PARENT_ID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> childrenParentId_;
    /**
     * <pre>
     * For each child, children_parent_id stores the node_id of its parent when it
     * was a leaf. For the idx-th child it corresponds the idx/2-th
     * children_parent_id.
     * </pre>
     *
     * <code>repeated int32 children_parent_id = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getChildrenParentIdList() {
      return childrenParentId_;
    }
    /**
     * <pre>
     * For each child, children_parent_id stores the node_id of its parent when it
     * was a leaf. For the idx-th child it corresponds the idx/2-th
     * children_parent_id.
     * </pre>
     *
     * <code>repeated int32 children_parent_id = 3;</code>
     */
    public int getChildrenParentIdCount() {
      return childrenParentId_.size();
    }
    /**
     * <pre>
     * For each child, children_parent_id stores the node_id of its parent when it
     * was a leaf. For the idx-th child it corresponds the idx/2-th
     * children_parent_id.
     * </pre>
     *
     * <code>repeated int32 children_parent_id = 3;</code>
     */
    public int getChildrenParentId(int index) {
      return childrenParentId_.get(index);
    }
    private int childrenParentIdMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (splitNode_ != null) {
        output.writeMessage(1, getSplitNode());
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(2, children_.get(i));
      }
      if (getChildrenParentIdList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(childrenParentIdMemoizedSerializedSize);
      }
      for (int i = 0; i < childrenParentId_.size(); i++) {
        output.writeInt32NoTag(childrenParentId_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (splitNode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSplitNode());
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, children_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < childrenParentId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(childrenParentId_.get(i));
        }
        size += dataSize;
        if (!getChildrenParentIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        childrenParentIdMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo other = (tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo) obj;

      boolean result = true;
      result = result && (hasSplitNode() == other.hasSplitNode());
      if (hasSplitNode()) {
        result = result && getSplitNode()
            .equals(other.getSplitNode());
      }
      result = result && getChildrenList()
          .equals(other.getChildrenList());
      result = result && getChildrenParentIdList()
          .equals(other.getChildrenParentIdList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSplitNode()) {
        hash = (37 * hash) + SPLIT_NODE_FIELD_NUMBER;
        hash = (53 * hash) + getSplitNode().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      if (getChildrenParentIdCount() > 0) {
        hash = (37 * hash) + CHILDREN_PARENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenParentIdList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.boosted_trees.learner.ObliviousSplitInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.learner.ObliviousSplitInfo)
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.class, tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChildrenFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (splitNodeBuilder_ == null) {
          splitNode_ = null;
        } else {
          splitNode_ = null;
          splitNodeBuilder_ = null;
        }
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          childrenBuilder_.clear();
        }
        childrenParentId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_descriptor;
      }

      @java.lang.Override
      public tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo getDefaultInstanceForType() {
        return tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo build() {
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo buildPartial() {
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo result = new tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (splitNodeBuilder_ == null) {
          result.splitNode_ = splitNode_;
        } else {
          result.splitNode_ = splitNodeBuilder_.build();
        }
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          childrenParentId_ = java.util.Collections.unmodifiableList(childrenParentId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.childrenParentId_ = childrenParentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo) {
          return mergeFrom((tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo other) {
        if (other == tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo.getDefaultInstance()) return this;
        if (other.hasSplitNode()) {
          mergeSplitNode(other.getSplitNode());
        }
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000002);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        if (!other.childrenParentId_.isEmpty()) {
          if (childrenParentId_.isEmpty()) {
            childrenParentId_ = other.childrenParentId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureChildrenParentIdIsMutable();
            childrenParentId_.addAll(other.childrenParentId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private tensorflow.boosted_trees.trees.TreeConfig.TreeNode splitNode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> splitNodeBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public boolean hasSplitNode() {
        return splitNodeBuilder_ != null || splitNode_ != null;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getSplitNode() {
        if (splitNodeBuilder_ == null) {
          return splitNode_ == null ? tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance() : splitNode_;
        } else {
          return splitNodeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder setSplitNode(tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (splitNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          splitNode_ = value;
          onChanged();
        } else {
          splitNodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder setSplitNode(
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder builderForValue) {
        if (splitNodeBuilder_ == null) {
          splitNode_ = builderForValue.build();
          onChanged();
        } else {
          splitNodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder mergeSplitNode(tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (splitNodeBuilder_ == null) {
          if (splitNode_ != null) {
            splitNode_ =
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.newBuilder(splitNode_).mergeFrom(value).buildPartial();
          } else {
            splitNode_ = value;
          }
          onChanged();
        } else {
          splitNodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public Builder clearSplitNode() {
        if (splitNodeBuilder_ == null) {
          splitNode_ = null;
          onChanged();
        } else {
          splitNode_ = null;
          splitNodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder getSplitNodeBuilder() {
        
        onChanged();
        return getSplitNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getSplitNodeOrBuilder() {
        if (splitNodeBuilder_ != null) {
          return splitNodeBuilder_.getMessageOrBuilder();
        } else {
          return splitNode_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance() : splitNode_;
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNode split_node = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> 
          getSplitNodeFieldBuilder() {
        if (splitNodeBuilder_ == null) {
          splitNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder>(
                  getSplitNode(),
                  getParentForChildren(),
                  isClean());
          splitNode_ = null;
        }
        return splitNodeBuilder_;
      }

      private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.Leaf> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.Leaf>(children_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> childrenBuilder_;

      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.Leaf> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder setChildren(
          int index, tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder setChildren(
          int index, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder addChildren(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder addChildren(
          int index, tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder addChildren(
          tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder addChildren(
          int index, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends tensorflow.boosted_trees.trees.TreeConfig.Leaf> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.Leaf children = 2;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }

      private java.util.List<java.lang.Integer> childrenParentId_ = java.util.Collections.emptyList();
      private void ensureChildrenParentIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          childrenParentId_ = new java.util.ArrayList<java.lang.Integer>(childrenParentId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getChildrenParentIdList() {
        return java.util.Collections.unmodifiableList(childrenParentId_);
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public int getChildrenParentIdCount() {
        return childrenParentId_.size();
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public int getChildrenParentId(int index) {
        return childrenParentId_.get(index);
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public Builder setChildrenParentId(
          int index, int value) {
        ensureChildrenParentIdIsMutable();
        childrenParentId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public Builder addChildrenParentId(int value) {
        ensureChildrenParentIdIsMutable();
        childrenParentId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public Builder addAllChildrenParentId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChildrenParentIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, childrenParentId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For each child, children_parent_id stores the node_id of its parent when it
       * was a leaf. For the idx-th child it corresponds the idx/2-th
       * children_parent_id.
       * </pre>
       *
       * <code>repeated int32 children_parent_id = 3;</code>
       */
      public Builder clearChildrenParentId() {
        childrenParentId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.learner.ObliviousSplitInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.learner.ObliviousSplitInfo)
    private static final tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo();
    }

    public static tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ObliviousSplitInfo>
        PARSER = new com.google.protobuf.AbstractParser<ObliviousSplitInfo>() {
      @java.lang.Override
      public ObliviousSplitInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ObliviousSplitInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ObliviousSplitInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ObliviousSplitInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.boosted_trees.learner.SplitInfoOuterClass.ObliviousSplitInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_learner_SplitInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_learner_SplitInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020split_info.proto\022 tensorflow.boosted_t" +
      "rees.learner\0328tensorflow/contrib/boosted" +
      "_trees/proto/tree_config.proto\"\276\001\n\tSplit" +
      "Info\022<\n\nsplit_node\030\001 \001(\0132(.tensorflow.bo" +
      "osted_trees.trees.TreeNode\0228\n\nleft_child" +
      "\030\002 \001(\0132$.tensorflow.boosted_trees.trees." +
      "Leaf\0229\n\013right_child\030\003 \001(\0132$.tensorflow.b" +
      "oosted_trees.trees.Leaf\"\246\001\n\022ObliviousSpl" +
      "itInfo\022<\n\nsplit_node\030\001 \001(\0132(.tensorflow." +
      "boosted_trees.trees.TreeNode\0226\n\010children" +
      "\030\002 \003(\0132$.tensorflow.boosted_trees.trees." +
      "Leaf\022\032\n\022children_parent_id\030\003 \003(\005B\003\370\001\001b\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tensorflow.boosted_trees.trees.TreeConfig.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_boosted_trees_learner_SplitInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_boosted_trees_learner_SplitInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_learner_SplitInfo_descriptor,
        new java.lang.String[] { "SplitNode", "LeftChild", "RightChild", });
    internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_learner_ObliviousSplitInfo_descriptor,
        new java.lang.String[] { "SplitNode", "Children", "ChildrenParentId", });
    tensorflow.boosted_trees.trees.TreeConfig.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
