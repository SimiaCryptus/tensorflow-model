/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master_service.proto

package org.tensorflow.distruntime;

public final class MasterServiceProtos {
  private MasterServiceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024master_service.proto\022\017tensorflow.grpc\032" +
      "%tensorflow/core/protobuf/master.proto2\273" +
      "\006\n\rMasterService\022T\n\rCreateSession\022 .tens" +
      "orflow.CreateSessionRequest\032!.tensorflow" +
      ".CreateSessionResponse\022T\n\rExtendSession\022" +
      " .tensorflow.ExtendSessionRequest\032!.tens" +
      "orflow.ExtendSessionResponse\022Z\n\017PartialR" +
      "unSetup\022\".tensorflow.PartialRunSetupRequ" +
      "est\032#.tensorflow.PartialRunSetupResponse" +
      "\022B\n\007RunStep\022\032.tensorflow.RunStepRequest\032" +
      "\033.tensorflow.RunStepResponse\022Q\n\014CloseSes" +
      "sion\022\037.tensorflow.CloseSessionRequest\032 ." +
      "tensorflow.CloseSessionResponse\022N\n\013ListD" +
      "evices\022\036.tensorflow.ListDevicesRequest\032\037" +
      ".tensorflow.ListDevicesResponse\022<\n\005Reset" +
      "\022\030.tensorflow.ResetRequest\032\031.tensorflow." +
      "ResetResponse\022Q\n\014MakeCallable\022\037.tensorfl" +
      "ow.MakeCallableRequest\032 .tensorflow.Make" +
      "CallableResponse\022N\n\013RunCallable\022\036.tensor" +
      "flow.RunCallableRequest\032\037.tensorflow.Run" +
      "CallableResponse\022Z\n\017ReleaseCallable\022\".te" +
      "nsorflow.ReleaseCallableRequest\032#.tensor" +
      "flow.ReleaseCallableResponseBq\n\032org.tens" +
      "orflow.distruntimeB\023MasterServiceProtosP" +
      "\001Z<github.com/tensorflow/tensorflow/tens" +
      "orflow/go/core/protobufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.distruntime.DistributedRuntimeProtos.getDescriptor(),
        }, assigner);
    org.tensorflow.distruntime.DistributedRuntimeProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
