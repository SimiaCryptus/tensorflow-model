/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_server.proto

package org.tensorflow.distruntime;

public final class ServerProtos {
  private ServerProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_ServerDef_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_ServerDef_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027tensorflow_server.proto\022\ntensorflow\032%t" +
      "ensorflow/core/protobuf/config.proto\032&te" +
      "nsorflow/core/protobuf/cluster.proto\"\245\001\n" +
      "\tServerDef\022\'\n\007cluster\030\001 \001(\0132\026.tensorflow" +
      ".ClusterDef\022\020\n\010job_name\030\002 \001(\t\022\022\n\ntask_in" +
      "dex\030\003 \001(\005\0227\n\026default_session_config\030\004 \001(" +
      "\0132\027.tensorflow.ConfigProto\022\020\n\010protocol\030\005" +
      " \001(\tBm\n\032org.tensorflow.distruntimeB\014Serv" +
      "erProtosP\001Z<github.com/tensorflow/tensor" +
      "flow/tensorflow/go/core/protobuf\370\001\001b\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.ConfigProtos.getDescriptor(),
          org.tensorflow.distruntime.ClusterProtos.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_ServerDef_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_ServerDef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_ServerDef_descriptor,
        new java.lang.String[] { "Cluster", "JobName", "TaskIndex", "DefaultSessionConfig", "Protocol", });
    org.tensorflow.framework.ConfigProtos.getDescriptor();
    org.tensorflow.distruntime.ClusterProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
