/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_log.proto

package org.tensorflow.util.testlog;

public interface CPUInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.CPUInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 num_cores = 1;</code>
   */
  long getNumCores();

  /**
   * <code>int64 num_cores_allowed = 2;</code>
   */
  long getNumCoresAllowed();

  /**
   * <pre>
   * How fast are these cpus?
   * </pre>
   *
   * <code>double mhz_per_cpu = 3;</code>
   */
  double getMhzPerCpu();

  /**
   * <pre>
   * Additional cpu information. For example,
   * Intel Ivybridge with HyperThreading (24 cores) dL1:32KB dL2:256KB dL3:30MB
   * </pre>
   *
   * <code>string cpu_info = 4;</code>
   */
  java.lang.String getCpuInfo();
  /**
   * <pre>
   * Additional cpu information. For example,
   * Intel Ivybridge with HyperThreading (24 cores) dL1:32KB dL2:256KB dL3:30MB
   * </pre>
   *
   * <code>string cpu_info = 4;</code>
   */
  com.google.protobuf.ByteString
      getCpuInfoBytes();

  /**
   * <pre>
   * What kind of cpu scaling is enabled on the host.
   * Examples include "performance", "ondemand", "conservative", "mixed".
   * </pre>
   *
   * <code>string cpu_governor = 5;</code>
   */
  java.lang.String getCpuGovernor();
  /**
   * <pre>
   * What kind of cpu scaling is enabled on the host.
   * Examples include "performance", "ondemand", "conservative", "mixed".
   * </pre>
   *
   * <code>string cpu_governor = 5;</code>
   */
  com.google.protobuf.ByteString
      getCpuGovernorBytes();

  /**
   * <pre>
   * Cache sizes (in bytes), e.g. "L2": 262144 (for 256KB)
   * </pre>
   *
   * <code>map&lt;string, int64&gt; cache_size = 6;</code>
   */
  int getCacheSizeCount();
  /**
   * <pre>
   * Cache sizes (in bytes), e.g. "L2": 262144 (for 256KB)
   * </pre>
   *
   * <code>map&lt;string, int64&gt; cache_size = 6;</code>
   */
  boolean containsCacheSize(
      java.lang.String key);
  /**
   * Use {@link #getCacheSizeMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Long>
  getCacheSize();
  /**
   * <pre>
   * Cache sizes (in bytes), e.g. "L2": 262144 (for 256KB)
   * </pre>
   *
   * <code>map&lt;string, int64&gt; cache_size = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.Long>
  getCacheSizeMap();
  /**
   * <pre>
   * Cache sizes (in bytes), e.g. "L2": 262144 (for 256KB)
   * </pre>
   *
   * <code>map&lt;string, int64&gt; cache_size = 6;</code>
   */

  long getCacheSizeOrDefault(
      java.lang.String key,
      long defaultValue);
  /**
   * <pre>
   * Cache sizes (in bytes), e.g. "L2": 262144 (for 256KB)
   * </pre>
   *
   * <code>map&lt;string, int64&gt; cache_size = 6;</code>
   */

  long getCacheSizeOrThrow(
      java.lang.String key);
}
