/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_log.proto

package org.tensorflow.util.testlog;

public interface BuildConfigurationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.BuildConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * opt, dbg, etc
   * </pre>
   *
   * <code>string mode = 1;</code>
   */
  java.lang.String getMode();
  /**
   * <pre>
   * opt, dbg, etc
   * </pre>
   *
   * <code>string mode = 1;</code>
   */
  com.google.protobuf.ByteString
      getModeBytes();

  /**
   * <pre>
   * CC compiler flags, if known
   * </pre>
   *
   * <code>repeated string cc_flags = 2;</code>
   */
  java.util.List<java.lang.String>
      getCcFlagsList();
  /**
   * <pre>
   * CC compiler flags, if known
   * </pre>
   *
   * <code>repeated string cc_flags = 2;</code>
   */
  int getCcFlagsCount();
  /**
   * <pre>
   * CC compiler flags, if known
   * </pre>
   *
   * <code>repeated string cc_flags = 2;</code>
   */
  java.lang.String getCcFlags(int index);
  /**
   * <pre>
   * CC compiler flags, if known
   * </pre>
   *
   * <code>repeated string cc_flags = 2;</code>
   */
  com.google.protobuf.ByteString
      getCcFlagsBytes(int index);

  /**
   * <pre>
   * Bazel compilation options, if known
   * </pre>
   *
   * <code>repeated string opts = 3;</code>
   */
  java.util.List<java.lang.String>
      getOptsList();
  /**
   * <pre>
   * Bazel compilation options, if known
   * </pre>
   *
   * <code>repeated string opts = 3;</code>
   */
  int getOptsCount();
  /**
   * <pre>
   * Bazel compilation options, if known
   * </pre>
   *
   * <code>repeated string opts = 3;</code>
   */
  java.lang.String getOpts(int index);
  /**
   * <pre>
   * Bazel compilation options, if known
   * </pre>
   *
   * <code>repeated string opts = 3;</code>
   */
  com.google.protobuf.ByteString
      getOptsBytes(int index);
}
