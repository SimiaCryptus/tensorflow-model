/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rewriter_config.proto

package org.tensorflow.framework;

public final class RewriterConfigProtos {
  private RewriterConfigProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_AutoParallelOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_AutoParallelOptions_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_ScopedAllocatorOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_ScopedAllocatorOptions_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_RewriterConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_RewriterConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025rewriter_config.proto\022\ntensorflow\032*ten" +
      "sorflow/core/framework/attr_value.proto\"" +
      ";\n\023AutoParallelOptions\022\016\n\006enable\030\001 \001(\010\022\024" +
      "\n\014num_replicas\030\002 \001(\005\"+\n\026ScopedAllocatorO" +
      "ptions\022\021\n\tenable_op\030\001 \003(\t\"\365\r\n\016RewriterCo" +
      "nfig\022;\n\020layout_optimizer\030\001 \001(\0162!.tensorf" +
      "low.RewriterConfig.Toggle\022;\n\020constant_fo" +
      "lding\030\003 \001(\0162!.tensorflow.RewriterConfig." +
      "Toggle\022=\n\022shape_optimization\030\r \001(\0162!.ten" +
      "sorflow.RewriterConfig.Toggle\0224\n\tremappi" +
      "ng\030\016 \001(\0162!.tensorflow.RewriterConfig.Tog" +
      "gle\022B\n\027arithmetic_optimization\030\007 \001(\0162!.t" +
      "ensorflow.RewriterConfig.Toggle\022B\n\027depen" +
      "dency_optimization\030\010 \001(\0162!.tensorflow.Re" +
      "writerConfig.Toggle\022<\n\021loop_optimization" +
      "\030\t \001(\0162!.tensorflow.RewriterConfig.Toggl" +
      "e\022@\n\025function_optimization\030\n \001(\0162!.tenso" +
      "rflow.RewriterConfig.Toggle\0229\n\016debug_str" +
      "ipper\030\013 \001(\0162!.tensorflow.RewriterConfig." +
      "Toggle\022\035\n\025disable_model_pruning\030\002 \001(\010\022H\n" +
      "\035scoped_allocator_optimization\030\017 \001(\0162!.t" +
      "ensorflow.RewriterConfig.Toggle\022C\n\030pin_t" +
      "o_host_optimization\030\022 \001(\0162!.tensorflow.R" +
      "ewriterConfig.Toggle\022\036\n\026disable_meta_opt" +
      "imizer\030\023 \001(\010\022O\n\031meta_optimizer_iteration" +
      "s\030\014 \001(\0162,.tensorflow.RewriterConfig.NumI" +
      "terationsType\022\027\n\017min_graph_nodes\030\021 \001(\005\022B" +
      "\n\023memory_optimization\030\004 \001(\0162%.tensorflow" +
      ".RewriterConfig.MemOptType\022/\n\'memory_opt" +
      "imizer_target_node_name_scope\030\006 \001(\t\022!\n\031m" +
      "eta_optimizer_timeout_ms\030\024 \001(\003\0226\n\rauto_p" +
      "arallel\030\005 \001(\0132\037.tensorflow.AutoParallelO" +
      "ptions\022 \n\030fail_on_optimizer_errors\030\025 \001(\010" +
      "\022A\n\025scoped_allocator_opts\030\020 \001(\0132\".tensor" +
      "flow.ScopedAllocatorOptions\022\022\n\noptimizer" +
      "s\030d \003(\t\022K\n\021custom_optimizers\030\310\001 \003(\0132/.te" +
      "nsorflow.RewriterConfig.CustomGraphOptim" +
      "izer\032\312\001\n\024CustomGraphOptimizer\022\014\n\004name\030\001 " +
      "\001(\t\022X\n\rparameter_map\030\002 \003(\0132A.tensorflow." +
      "RewriterConfig.CustomGraphOptimizer.Para" +
      "meterMapEntry\032J\n\021ParameterMapEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025.tensorflow.Attr" +
      "Value:\0028\001\"6\n\006Toggle\022\013\n\007DEFAULT\020\000\022\006\n\002ON\020\001" +
      "\022\007\n\003OFF\020\002\022\016\n\nAGGRESSIVE\020\003\"<\n\021NumIteratio" +
      "nsType\022\025\n\021DEFAULT_NUM_ITERS\020\000\022\007\n\003ONE\020\001\022\007" +
      "\n\003TWO\020\002\"\237\001\n\nMemOptType\022\023\n\017DEFAULT_MEM_OP" +
      "T\020\000\022\016\n\nNO_MEM_OPT\020\001\022\n\n\006MANUAL\020\002\022\027\n\023SWAPP" +
      "ING_HEURISTICS\020\004\022\034\n\030RECOMPUTATION_HEURIS" +
      "TICS\020\005\022\031\n\025SCHEDULING_HEURISTICS\020\006\022\016\n\nHEU" +
      "RISTICS\020\003Bs\n\030org.tensorflow.frameworkB\024R" +
      "ewriterConfigProtosP\001Z<github.com/tensor" +
      "flow/tensorflow/tensorflow/go/core/proto" +
      "buf\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.AttrValueProtos.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_AutoParallelOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_AutoParallelOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_AutoParallelOptions_descriptor,
        new java.lang.String[] { "Enable", "NumReplicas", });
    internal_static_tensorflow_ScopedAllocatorOptions_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_ScopedAllocatorOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_ScopedAllocatorOptions_descriptor,
        new java.lang.String[] { "EnableOp", });
    internal_static_tensorflow_RewriterConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_RewriterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_RewriterConfig_descriptor,
        new java.lang.String[] { "LayoutOptimizer", "ConstantFolding", "ShapeOptimization", "Remapping", "ArithmeticOptimization", "DependencyOptimization", "LoopOptimization", "FunctionOptimization", "DebugStripper", "DisableModelPruning", "ScopedAllocatorOptimization", "PinToHostOptimization", "DisableMetaOptimizer", "MetaOptimizerIterations", "MinGraphNodes", "MemoryOptimization", "MemoryOptimizerTargetNodeNameScope", "MetaOptimizerTimeoutMs", "AutoParallel", "FailOnOptimizerErrors", "ScopedAllocatorOpts", "Optimizers", "CustomOptimizers", });
    internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_descriptor =
      internal_static_tensorflow_RewriterConfig_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_descriptor,
        new java.lang.String[] { "Name", "ParameterMap", });
    internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_descriptor =
      internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.tensorflow.framework.AttrValueProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
