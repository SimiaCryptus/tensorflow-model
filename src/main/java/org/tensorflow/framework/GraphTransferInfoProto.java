/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph_transfer_info.proto

package org.tensorflow.framework;

public final class GraphTransferInfoProto {
  private GraphTransferInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferNodeInput_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferNodeInput_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferNodeInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferNodeInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferConstNodeInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferConstNodeInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferNodeInputInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferNodeInputInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferNodeOutputInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferNodeOutputInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferGraphInputNodeInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferGraphInputNodeInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferGraphOutputNodeInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferGraphOutputNodeInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_GraphTransferInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_GraphTransferInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031graph_transfer_info.proto\022\ntensorflow\032" +
      "%tensorflow/core/framework/types.proto\">" +
      "\n\026GraphTransferNodeInput\022\017\n\007node_id\030\001 \001(" +
      "\005\022\023\n\013output_port\030\002 \001(\005\"\233\001\n\025GraphTransfer" +
      "NodeInfo\022\014\n\004name\030\001 \001(\t\022\017\n\007node_id\030\002 \001(\005\022" +
      "\021\n\ttype_name\030\003 \001(\t\022\021\n\tsoc_op_id\030\004 \001(\005\022\022\n" +
      "\npadding_id\030\005 \001(\005\022\023\n\013input_count\030\006 \001(\005\022\024" +
      "\n\014output_count\030\007 \001(\005\"}\n\032GraphTransferCon" +
      "stNodeInfo\022\014\n\004name\030\001 \001(\t\022\017\n\007node_id\030\002 \001(" +
      "\005\022\r\n\005shape\030\003 \003(\003\022\014\n\004data\030\004 \001(\014\022#\n\005dtype\030" +
      "\005 \001(\0162\024.tensorflow.DataType\"e\n\032GraphTran" +
      "sferNodeInputInfo\022\017\n\007node_id\030\001 \001(\005\0226\n\nno" +
      "de_input\030\002 \003(\0132\".tensorflow.GraphTransfe" +
      "rNodeInput\"E\n\033GraphTransferNodeOutputInf" +
      "o\022\017\n\007node_id\030\001 \001(\005\022\025\n\rmax_byte_size\030\002 \003(" +
      "\005\"c\n\037GraphTransferGraphInputNodeInfo\022\014\n\004" +
      "name\030\001 \001(\t\022\r\n\005shape\030\002 \003(\003\022#\n\005dtype\030\003 \001(\016" +
      "2\024.tensorflow.DataType\"d\n GraphTransferG" +
      "raphOutputNodeInfo\022\014\n\004name\030\001 \001(\t\022\r\n\005shap" +
      "e\030\002 \003(\003\022#\n\005dtype\030\003 \001(\0162\024.tensorflow.Data" +
      "Type\"\215\004\n\021GraphTransferInfo\0224\n\tnode_info\030" +
      "\001 \003(\0132!.tensorflow.GraphTransferNodeInfo" +
      "\022?\n\017const_node_info\030\002 \003(\0132&.tensorflow.G" +
      "raphTransferConstNodeInfo\022?\n\017node_input_" +
      "info\030\003 \003(\0132&.tensorflow.GraphTransferNod" +
      "eInputInfo\022A\n\020node_output_info\030\004 \003(\0132\'.t" +
      "ensorflow.GraphTransferNodeOutputInfo\022J\n" +
      "\025graph_input_node_info\030\005 \003(\0132+.tensorflo" +
      "w.GraphTransferGraphInputNodeInfo\022L\n\026gra" +
      "ph_output_node_info\030\006 \003(\0132,.tensorflow.G" +
      "raphTransferGraphOutputNodeInfo\022>\n\013desti" +
      "nation\030\007 \001(\0162).tensorflow.GraphTransferI" +
      "nfo.Destination\"#\n\013Destination\022\007\n\003NOP\020\000\022" +
      "\013\n\007HEXAGON\020\001Bv\n\030org.tensorflow.framework" +
      "B\026GraphTransferInfoProtoP\001Z=github.com/t" +
      "ensorflow/tensorflow/tensorflow/go/core/" +
      "framework\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TypesProtos.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_GraphTransferNodeInput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_GraphTransferNodeInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferNodeInput_descriptor,
        new java.lang.String[] { "NodeId", "OutputPort", });
    internal_static_tensorflow_GraphTransferNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_GraphTransferNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferNodeInfo_descriptor,
        new java.lang.String[] { "Name", "NodeId", "TypeName", "SocOpId", "PaddingId", "InputCount", "OutputCount", });
    internal_static_tensorflow_GraphTransferConstNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_GraphTransferConstNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferConstNodeInfo_descriptor,
        new java.lang.String[] { "Name", "NodeId", "Shape", "Data", "Dtype", });
    internal_static_tensorflow_GraphTransferNodeInputInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_GraphTransferNodeInputInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferNodeInputInfo_descriptor,
        new java.lang.String[] { "NodeId", "NodeInput", });
    internal_static_tensorflow_GraphTransferNodeOutputInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_GraphTransferNodeOutputInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferNodeOutputInfo_descriptor,
        new java.lang.String[] { "NodeId", "MaxByteSize", });
    internal_static_tensorflow_GraphTransferGraphInputNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tensorflow_GraphTransferGraphInputNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferGraphInputNodeInfo_descriptor,
        new java.lang.String[] { "Name", "Shape", "Dtype", });
    internal_static_tensorflow_GraphTransferGraphOutputNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_tensorflow_GraphTransferGraphOutputNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferGraphOutputNodeInfo_descriptor,
        new java.lang.String[] { "Name", "Shape", "Dtype", });
    internal_static_tensorflow_GraphTransferInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_tensorflow_GraphTransferInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_GraphTransferInfo_descriptor,
        new java.lang.String[] { "NodeInfo", "ConstNodeInfo", "NodeInputInfo", "NodeOutputInfo", "GraphInputNodeInfo", "GraphOutputNodeInfo", "Destination", });
    org.tensorflow.framework.TypesProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
