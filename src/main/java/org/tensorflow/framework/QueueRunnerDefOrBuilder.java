/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: queue_runner.proto

package org.tensorflow.framework;

public interface QueueRunnerDefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.QueueRunnerDef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Queue name.
   * </pre>
   *
   * <code>string queue_name = 1;</code>
   */
  java.lang.String getQueueName();
  /**
   * <pre>
   * Queue name.
   * </pre>
   *
   * <code>string queue_name = 1;</code>
   */
  com.google.protobuf.ByteString
      getQueueNameBytes();

  /**
   * <pre>
   * A list of enqueue operations.
   * </pre>
   *
   * <code>repeated string enqueue_op_name = 2;</code>
   */
  java.util.List<java.lang.String>
      getEnqueueOpNameList();
  /**
   * <pre>
   * A list of enqueue operations.
   * </pre>
   *
   * <code>repeated string enqueue_op_name = 2;</code>
   */
  int getEnqueueOpNameCount();
  /**
   * <pre>
   * A list of enqueue operations.
   * </pre>
   *
   * <code>repeated string enqueue_op_name = 2;</code>
   */
  java.lang.String getEnqueueOpName(int index);
  /**
   * <pre>
   * A list of enqueue operations.
   * </pre>
   *
   * <code>repeated string enqueue_op_name = 2;</code>
   */
  com.google.protobuf.ByteString
      getEnqueueOpNameBytes(int index);

  /**
   * <pre>
   * The operation to run to close the queue.
   * </pre>
   *
   * <code>string close_op_name = 3;</code>
   */
  java.lang.String getCloseOpName();
  /**
   * <pre>
   * The operation to run to close the queue.
   * </pre>
   *
   * <code>string close_op_name = 3;</code>
   */
  com.google.protobuf.ByteString
      getCloseOpNameBytes();

  /**
   * <pre>
   * The operation to run to cancel the queue.
   * </pre>
   *
   * <code>string cancel_op_name = 4;</code>
   */
  java.lang.String getCancelOpName();
  /**
   * <pre>
   * The operation to run to cancel the queue.
   * </pre>
   *
   * <code>string cancel_op_name = 4;</code>
   */
  com.google.protobuf.ByteString
      getCancelOpNameBytes();

  /**
   * <pre>
   * A list of exception types considered to signal a safely closed queue
   * if raised during enqueue operations.
   * </pre>
   *
   * <code>repeated .tensorflow.error.Code queue_closed_exception_types = 5;</code>
   */
  java.util.List<org.tensorflow.framework.Code> getQueueClosedExceptionTypesList();
  /**
   * <pre>
   * A list of exception types considered to signal a safely closed queue
   * if raised during enqueue operations.
   * </pre>
   *
   * <code>repeated .tensorflow.error.Code queue_closed_exception_types = 5;</code>
   */
  int getQueueClosedExceptionTypesCount();
  /**
   * <pre>
   * A list of exception types considered to signal a safely closed queue
   * if raised during enqueue operations.
   * </pre>
   *
   * <code>repeated .tensorflow.error.Code queue_closed_exception_types = 5;</code>
   */
  org.tensorflow.framework.Code getQueueClosedExceptionTypes(int index);
  /**
   * <pre>
   * A list of exception types considered to signal a safely closed queue
   * if raised during enqueue operations.
   * </pre>
   *
   * <code>repeated .tensorflow.error.Code queue_closed_exception_types = 5;</code>
   */
  java.util.List<java.lang.Integer>
  getQueueClosedExceptionTypesValueList();
  /**
   * <pre>
   * A list of exception types considered to signal a safely closed queue
   * if raised during enqueue operations.
   * </pre>
   *
   * <code>repeated .tensorflow.error.Code queue_closed_exception_types = 5;</code>
   */
  int getQueueClosedExceptionTypesValue(int index);
}
