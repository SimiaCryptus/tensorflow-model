/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf2xla.proto

package org.tensorflow.tf2xla;

public interface FeedOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.tf2xla.Feed)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.tensorflow.tf2xla.TensorId id = 1;</code>
   */
  boolean hasId();
  /**
   * <code>.tensorflow.tf2xla.TensorId id = 1;</code>
   */
  org.tensorflow.tf2xla.TensorId getId();
  /**
   * <code>.tensorflow.tf2xla.TensorId id = 1;</code>
   */
  org.tensorflow.tf2xla.TensorIdOrBuilder getIdOrBuilder();

  /**
   * <code>.tensorflow.TensorShapeProto shape = 2;</code>
   */
  boolean hasShape();
  /**
   * <code>.tensorflow.TensorShapeProto shape = 2;</code>
   */
  org.tensorflow.framework.TensorShapeProto getShape();
  /**
   * <code>.tensorflow.TensorShapeProto shape = 2;</code>
   */
  org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder();

  /**
   * <pre>
   * Optional name for generated code.
   * </pre>
   *
   * <code>string name = 3;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * Optional name for generated code.
   * </pre>
   *
   * <code>string name = 3;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Optional data type. This is not normally required, as the graph itself
   * contains this information. However, if the node being fed is an op that is
   * not linked into the binary, then the type cannot be inferred from the node;
   * in this case, the type should be set here.
   * </pre>
   *
   * <code>.tensorflow.DataType type = 4;</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * Optional data type. This is not normally required, as the graph itself
   * contains this information. However, if the node being fed is an op that is
   * not linked into the binary, then the type cannot be inferred from the node;
   * in this case, the type should be set here.
   * </pre>
   *
   * <code>.tensorflow.DataType type = 4;</code>
   */
  org.tensorflow.framework.DataType getType();
}
