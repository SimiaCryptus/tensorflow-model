/*
 * Copyright (c) 2019 by Andrew Charneski.
 *
 * The author licenses this file to you under the
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf2xla.proto

package org.tensorflow.tf2xla;

public interface ConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.tf2xla.Config)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Each feed is a positional input argument for the generated computation.
   * The order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Feed feed = 1;</code>
   */
  java.util.List<org.tensorflow.tf2xla.Feed> 
      getFeedList();
  /**
   * <pre>
   * Each feed is a positional input argument for the generated computation.
   * The order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Feed feed = 1;</code>
   */
  org.tensorflow.tf2xla.Feed getFeed(int index);
  /**
   * <pre>
   * Each feed is a positional input argument for the generated computation.
   * The order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Feed feed = 1;</code>
   */
  int getFeedCount();
  /**
   * <pre>
   * Each feed is a positional input argument for the generated computation.
   * The order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Feed feed = 1;</code>
   */
  java.util.List<? extends org.tensorflow.tf2xla.FeedOrBuilder> 
      getFeedOrBuilderList();
  /**
   * <pre>
   * Each feed is a positional input argument for the generated computation.
   * The order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Feed feed = 1;</code>
   */
  org.tensorflow.tf2xla.FeedOrBuilder getFeedOrBuilder(
      int index);

  /**
   * <pre>
   * Each fetch is a positional output argument for the generated computation.
   * The order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Fetch fetch = 2;</code>
   */
  java.util.List<org.tensorflow.tf2xla.Fetch> 
      getFetchList();
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated computation.
   * The order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Fetch fetch = 2;</code>
   */
  org.tensorflow.tf2xla.Fetch getFetch(int index);
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated computation.
   * The order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Fetch fetch = 2;</code>
   */
  int getFetchCount();
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated computation.
   * The order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Fetch fetch = 2;</code>
   */
  java.util.List<? extends org.tensorflow.tf2xla.FetchOrBuilder> 
      getFetchOrBuilderList();
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated computation.
   * The order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tf2xla.Fetch fetch = 2;</code>
   */
  org.tensorflow.tf2xla.FetchOrBuilder getFetchOrBuilder(
      int index);
}
